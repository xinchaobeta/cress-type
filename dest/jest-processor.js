// Generated by CoffeeScript 1.9.2
var babel, babelJest, coffee, ref, resolveRc, sep;

coffee = require('coffee-script');

resolveRc = require('babel-core/lib/babel/tools/resolve-rc');

babel = require('babel-core');

sep = require('path').sep;

babelJest = {
  opt: resolveRc(((ref = require.main) != null ? ref.filename : void 0) || process.cwd()),
  shouldIgnore: function(filename) {
    var ignore, only;
    ignore = babel.util.arrayify(this.opt.ignore, babel.util.regexify);
    only = babel.util.arrayify(this.opt.only, babel.util.regexify);
    if (!(ignore || only)) {
      return filename.split(sep).indexOf("node_modules") >= 0;
    } else {
      return babel.util.shouldIgnore(filename, ignore || [], only || []);
    }
  },
  process: function(src, filename) {
    var stage;
    stage = process.env.BABEL_JEST_STAGE || this.opt.stage || 2;
    if (!this.shouldIgnore(filename) && babel.canCompile(filename)) {
      return babel.transform(src, {
        filename: filename,
        stage: stage,
        retainLines: true
      }).code;
    } else {
      return src;
    }
  }
};

module.exports = {
  process: function(src, path) {
    if (coffee.helpers.isCoffee(path)) {
      return coffee.compile(src, {
        'bare': true
      });
    } else {
      return babelJest.process(src, path);
    }
  }
};
